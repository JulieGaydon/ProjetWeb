{"ast":null,"code":"import _slicedToArray from \"/Users/camillelewden/Documents/FAC/L4/S6/Web/projetFinal/ProjetWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/camillelewden/Documents/FAC/L4/S6/Web/projetFinal/ProjetWeb/src/MurDeTweets.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport FormAddMessage from './FormAddMessage';\nimport ListeMessage from './ListeMessage';\nimport Profil from './Profil';\nimport Logout from './Logout';\nimport Recherche from './Recherche';\nimport './MurDeTweets.css';\nimport Message from './Message';\n\nfunction MurDeTweets(_ref) {\n  var CallBackChangeEtat = _ref.CallBackChangeEtat,\n      PPpseudo = _ref.PPpseudo;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1]; // si false -> mur tweet , true -> profil\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profil = _useState4[0],\n      setProfil = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pseudo = _useState6[0],\n      setPseudo = _useState6[1];\n\n  useEffect(function () {\n    setPseudo({\n      PPpseudo: PPpseudo\n    });\n    var instance = axios.create({\n      baseURL: 'http://localhost:4000/',\n      timeout: 1000,\n      headers: {\n        'X-Custom-Header': 'foobar'\n      }\n    });\n    instance.get('api/message/' + pseudo).then(function (response) {\n      //response.data liste de tous les messages\n      console.log(\"retourne :\", response.data); //doc = 1message\n\n      setPosts(response.data.map(function (doc) {\n        return doc;\n      }));\n    }).catch(function (error) {\n      console.log(\"message pas bon\");\n      alert(error);\n      console.log(error);\n    });\n  }, []);\n\n  if (profil == true) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Profil, {\n      CallBackChangeEtat: CallBackChangeEtat,\n      profilpseudo: PPpseudo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      id: \"MurDeTweets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"enteteM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      id: \"bouttonMdT\",\n      onClick: function onClick() {\n        return setProfil(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Profil\"), React.createElement(Logout, {\n      CallBackChangeEtat: CallBackChangeEtat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"recherche\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Recherche, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"messM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormAddMessage, {\n      passerPseudo: PPpseudo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), console.log(\"post:\", posts), posts.map(function (post) {\n      return React.createElement(Message, {\n        key: post._id,\n        pseudo: post.pseudo,\n        message: post.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    })));\n  }\n\n  {\n    /*on aura une barre de recherche pour chercher des personnes et il faut rajouter des choses*/\n  }\n} // class MurDeTweets extends Component{\n//     constructor(props){\n//         super(props);\n//         this.state = {afficheP : false, ecrireM : false}\n//         // props.addMessage({m : \"TestMessage\"})\n//         // this.processNewMessage= this.processNewMessage.bind(this)\n//         this.afficheProfil= this.afficheProfil.bind(this)\n//         // this.ecrireMessage= this.ecrireMessage.bind(this)\n//     }\n//     // processNewMessage(m){\n//     //     this.setState((state)=>{state.ListeM.push(m);\n//     //     return state;})\n//     // }\n//     afficheProfil(value){\n//         this.setState({afficheP : value});\n//         return this.state;\n//     }\n//     ecrireMessage(value){\n//         this.setState({ecrireM : value});\n//         return this.state;\n//     }\n//     render(){\n//         if(this.state.afficheP === true){\n//             return (<div className = \"Profil\">\n//                 {<Profil passerPseudo = {this.props.PPpseudo} CallBackChangeEtat = {this.props.CallBackChangeEtat} CallBackAfficheProfil = {this.afficheProfil}/>}\n//             </div>);\n//         }\n//         // if(this.state.ecrireM === true){\n//         //     return (<div className = \"FormAddMessage\">\n//         //         {<FormAddMessage CallBackEcrireMessage = {this.ecrireMessage}/>}\n//         //     </div>);\n//         // }\n//         else{\n//             return(\n//                 <fieldset id = \"MurDeTweets\">\n//                     <div id=\"enteteM\">\n//                         <button type=\"button\" id = \"bouttonMdT\" onClick={()=>this.afficheProfil(true)}>Profil</button>\n//                         <Logout CallBackChangeEtat = {this.props.CallBackChangeEtat} />\n//                     </div>\n//                     <div id=\"recherche\">\n//                         <Recherche/>\n//                     </div>\n//                     <div id=\"messM\">\n//                         <FormAddMessage passerPseudo = {this.props.PPpseudo}/>\n//                         <ListeMessage passerPseudo = {this.props.PPpseudo} tousMessages = {true}/>\n//                     </div>\n//                     <div id=\"question\">\n//                     </div>\n//                 </fieldset>\n//                 )\n//         }\n//     }\n// }\n\n\nexport default MurDeTweets;","map":{"version":3,"sources":["/Users/camillelewden/Documents/FAC/L4/S6/Web/projetFinal/ProjetWeb/src/MurDeTweets.js"],"names":["React","useEffect","useState","axios","FormAddMessage","ListeMessage","Profil","Logout","Recherche","Message","MurDeTweets","CallBackChangeEtat","PPpseudo","posts","setPosts","profil","setProfil","pseudo","setPseudo","instance","create","baseURL","timeout","headers","get","then","response","console","log","data","map","doc","catch","error","alert","post","_id","message"],"mappings":"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","sourcesContent":["import React, { useEffect ,useState } from 'react';\nimport axios from 'axios';\nimport FormAddMessage from './FormAddMessage';\nimport ListeMessage from './ListeMessage';\nimport Profil from './Profil';\nimport Logout from './Logout';\nimport Recherche from './Recherche';\nimport './MurDeTweets.css';\nimport Message from './Message';\n\nfunction MurDeTweets ({CallBackChangeEtat, PPpseudo}){\n    const[posts, setPosts] = useState([]);\n    // si false -> mur tweet , true -> profil\n    const[profil, setProfil] = useState(false);\n    const[pseudo, setPseudo] = useState(\"\");\n\n    useEffect(()=>{\n        setPseudo({PPpseudo})\n        const instance = axios.create({\n            baseURL: 'http://localhost:4000/',\n            timeout: 1000,\n            headers: {'X-Custom-Header': 'foobar'}\n        });\n        instance.get('api/message/'+pseudo)\n        .then(function (response){\n            //response.data liste de tous les messages\n            console.log(\"retourne :\",response.data)\n            //doc = 1message\n            setPosts(response.data.map((doc) => doc))\n        })\n        .catch(function (error){\n            console.log(\"message pas bon\")\n            alert(error)\n            console.log(error)\n        })\n    },[])\n    \n        if (profil == true){\n            return(\n                <div>\n                   <Profil CallBackChangeEtat = {CallBackChangeEtat} profilpseudo = {PPpseudo}/>\n\n\n                </div>\n            )\n        }else{\n            return(\n                <div id = \"MurDeTweets\">\n                <div id=\"enteteM\">\n                    <button type=\"button\" id = \"bouttonMdT\" onClick={()=>setProfil(true)}>Profil</button>\n                    <Logout CallBackChangeEtat = {CallBackChangeEtat} />                     \n                </div>\n            \n                <div id=\"recherche\">\n                    <Recherche/>\n                </div>\n                \n                <div id=\"messM\">\n                    <FormAddMessage passerPseudo = {PPpseudo}/>\n                    {/* <ListeMessage passerPseudo = {PPpseudo} tousMessages = {true}/> */}\n                    {console.log(\"post:\",posts)}\n                    {posts.map((post) => (\n                        <Message key = {post._id} pseudo = {post.pseudo} message = {post.message} />\n                    ))}\n\n                </div>\n            </div>)\n            \n        }\n            {/*on aura une barre de recherche pour chercher des personnes et il faut rajouter des choses*/}\n           \n        \n  }\n// class MurDeTweets extends Component{\n//     constructor(props){\n//         super(props);\n//         this.state = {afficheP : false, ecrireM : false}\n//         // props.addMessage({m : \"TestMessage\"})\n//         // this.processNewMessage= this.processNewMessage.bind(this)\n//         this.afficheProfil= this.afficheProfil.bind(this)\n//         // this.ecrireMessage= this.ecrireMessage.bind(this)\n//     }\n\n//     // processNewMessage(m){\n//     //     this.setState((state)=>{state.ListeM.push(m);\n//     //     return state;})\n//     // }\n\n//     afficheProfil(value){\n//         this.setState({afficheP : value});\n//         return this.state;\n//     }\n\n//     ecrireMessage(value){\n//         this.setState({ecrireM : value});\n//         return this.state;\n//     }\n\n//     render(){\n//         if(this.state.afficheP === true){\n//             return (<div className = \"Profil\">\n//                 {<Profil passerPseudo = {this.props.PPpseudo} CallBackChangeEtat = {this.props.CallBackChangeEtat} CallBackAfficheProfil = {this.afficheProfil}/>}\n//             </div>);\n//         }\n//         // if(this.state.ecrireM === true){\n//         //     return (<div className = \"FormAddMessage\">\n//         //         {<FormAddMessage CallBackEcrireMessage = {this.ecrireMessage}/>}\n//         //     </div>);\n//         // }\n//         else{\n//             return(\n//                 <fieldset id = \"MurDeTweets\">\n//                     <div id=\"enteteM\">\n//                         <button type=\"button\" id = \"bouttonMdT\" onClick={()=>this.afficheProfil(true)}>Profil</button>\n//                         <Logout CallBackChangeEtat = {this.props.CallBackChangeEtat} />\n//                     </div>\n//                     <div id=\"recherche\">\n//                         <Recherche/>\n//                     </div>\n//                     <div id=\"messM\">\n//                         <FormAddMessage passerPseudo = {this.props.PPpseudo}/>\n//                         <ListeMessage passerPseudo = {this.props.PPpseudo} tousMessages = {true}/>\n//                     </div>\n//                     <div id=\"question\">\n\n//                     </div>\n//                 </fieldset>\n\n                    \n//                 )\n//         }\n//     }\n// }\n\nexport default MurDeTweets;"]},"metadata":{},"sourceType":"module"}