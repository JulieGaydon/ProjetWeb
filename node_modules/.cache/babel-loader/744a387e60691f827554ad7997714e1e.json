{"ast":null,"code":"import _slicedToArray from \"/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/src/MurDeTweets.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport FormAddMessage from './FormAddMessage';\nimport ListeMessage from './ListeMessage';\nimport Profil from './Profil';\nimport ProfilAmi from './ProfilAmi';\nimport Logout from './Logout';\nimport Recherche from './Recherche';\nimport './MurDeTweets.css';\nimport Message from './Message';\n\nfunction MurDeTweets(_ref) {\n  var CallBackChangeEtat = _ref.CallBackChangeEtat,\n      PPpseudo = _ref.PPpseudo;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1]; // si false -> mur tweet , true -> profil\n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profil = _useState4[0],\n      setProfil = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pseudo = _useState6[0],\n      setPseudo = _useState6[1];\n\n  useEffect(function () {\n    var p = {\n      PPpseudo: PPpseudo\n    };\n    console.log(\"PPp: \", PPpseudo);\n    setPseudo(p.PPpseudo);\n    var instance = axios.create({\n      baseURL: 'http://localhost:4000/',\n      timeout: 1000,\n      headers: {\n        'X-Custom-Header': 'foobar'\n      }\n    });\n    instance.get('api/message/All/' + p.PPpseudo).then(function (response) {\n      //response.data liste de tous les messages\n      console.log(\"retourne :\", response.data); //doc = 1message\n\n      setPosts(response.data.map(function (doc) {\n        return doc;\n      }));\n    }).catch(function (error) {\n      console.log(\"message pas bon\");\n      alert(error);\n      console.log(error);\n    });\n  }, []); // on affiche notre page de profil\n\n  if (profil == pseudo) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Profil, {\n      CallBackChangeEtat: CallBackChangeEtat,\n      PPpseudo: pseudo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  } // on affiche page de profil d'un autre user\n\n\n  if (profil != pseudo) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(ProfilAmi, {\n      CallBackChangeEtat: CallBackChangeEtat,\n      PPpseudo: pseudo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      id: \"MurDeTweets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"enteteM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      id: \"bouttonMdT\",\n      onClick: function onClick() {\n        return setProfil(pseudo);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Profil\"), React.createElement(Logout, {\n      CallBackChangeEtat: CallBackChangeEtat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"recherche\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Recherche, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"messM\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(FormAddMessage, {\n      passerPseudo: pseudo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), console.log(\"post:\", posts), posts.map(function (post) {\n      return React.createElement(Message, {\n        key: post._id,\n        pseudo: post.pseudo,\n        message: post.message,\n        setProfil: setProfil,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    })));\n  }\n\n  {\n    /*on aura une barre de recherche pour chercher des personnes et il faut rajouter des choses*/\n  }\n}\n\nexport default MurDeTweets;","map":{"version":3,"sources":["/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/src/MurDeTweets.js"],"names":["React","useEffect","useState","axios","FormAddMessage","ListeMessage","Profil","ProfilAmi","Logout","Recherche","Message","MurDeTweets","CallBackChangeEtat","PPpseudo","posts","setPosts","profil","setProfil","pseudo","setPseudo","p","console","log","instance","create","baseURL","timeout","headers","get","then","response","data","map","doc","catch","error","alert","post","_id","message"],"mappings":"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","sourcesContent":["import React, { useEffect ,useState } from 'react';\nimport axios from 'axios';\nimport FormAddMessage from './FormAddMessage';\nimport ListeMessage from './ListeMessage';\nimport Profil from './Profil';\nimport ProfilAmi from './ProfilAmi';\nimport Logout from './Logout';\nimport Recherche from './Recherche';\nimport './MurDeTweets.css';\nimport Message from './Message';\n\nfunction MurDeTweets ({CallBackChangeEtat, PPpseudo}){\n    const[posts, setPosts] = useState([]);\n    // si false -> mur tweet , true -> profil\n    const[profil, setProfil] = useState(\"\");\n    const[pseudo, setPseudo] = useState(\"\");\n\n    useEffect(()=>{\n        let p = {PPpseudo}\n        console.log(\"PPp: \",PPpseudo)\n        setPseudo(p.PPpseudo)\n        const instance = axios.create({\n            baseURL: 'http://localhost:4000/',\n            timeout: 1000,\n            headers: {'X-Custom-Header': 'foobar'}\n        });\n        instance.get('api/message/All/'+p.PPpseudo)\n        .then(function (response){\n            //response.data liste de tous les messages\n            console.log(\"retourne :\",response.data)\n            //doc = 1message\n            setPosts(response.data.map((doc) => doc))\n        })\n        .catch(function (error){\n            console.log(\"message pas bon\")\n            alert(error)\n            console.log(error)\n        })\n    },[])\n\n        // on affiche notre page de profil\n        if (profil == pseudo){\n            return(\n                <div>\n                   <Profil CallBackChangeEtat = {CallBackChangeEtat} PPpseudo = {pseudo}/>\n                </div>\n            )\n        }\n        // on affiche page de profil d'un autre user\n        if (profil != pseudo){\n            return(\n                <div>\n                    <ProfilAmi CallBackChangeEtat = {CallBackChangeEtat} PPpseudo = {pseudo}/>\n                </div>\n            )\n        \n        }else{\n            return(\n                <div id = \"MurDeTweets\">\n                <div id=\"enteteM\">\n                    <button type=\"button\" id = \"bouttonMdT\" onClick={()=>setProfil(pseudo)}>Profil</button>\n                    <Logout CallBackChangeEtat = {CallBackChangeEtat} />                     \n                </div>\n            \n                <div id=\"recherche\">\n                    <Recherche/>\n                </div>\n                \n                <div id=\"messM\">\n                    <FormAddMessage passerPseudo = {pseudo}/>\n                    {/* <ListeMessage passerPseudo = {PPpseudo} tousMessages = {true}/> */}\n                    {console.log(\"post:\",posts)}\n                    {posts.map((post) => (\n                        <Message key = {post._id} pseudo = {post.pseudo} message = {post.message} setProfil= {setProfil} />\n                    ))}\n                </div>\n            </div>)\n            \n        }\n            {/*on aura une barre de recherche pour chercher des personnes et il faut rajouter des choses*/}\n           \n        \n  }\n\nexport default MurDeTweets;"]},"metadata":{},"sourceType":"module"}