{"ast":null,"code":"import _slicedToArray from \"/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/src/Recherche.js\";\nimport React, { useState } from 'react';\nimport Message from './Message';\nimport './Recherche.css';\nimport axios from 'axios';\n\nfunction Recherche(_ref) {\n  var PPpseudo = _ref.PPpseudo,\n      setClic = _ref.setClic;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      rechercheU = _useState2[0],\n      setRechercheU = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      posts = _useState4[0],\n      setPosts = _useState4[1];\n\n  var sauv = []; // let posts = []\n\n  var rechercher = function rechercher(e) {\n    e.preventDefault();\n    var p = {\n      PPpseudo: PPpseudo\n    };\n    console.log(\"PPp: \", PPpseudo);\n    var instance = axios.create({\n      baseURL: 'http://localhost:4000/',\n      timeout: 1000,\n      headers: {\n        'X-Custom-Header': 'foobar'\n      }\n    });\n    var i = 0;\n    sauv = [];\n    instance.get('api/message/All/' + p.PPpseudo).then(function (response) {\n      //response.data liste de tous les messages\n      console.log(\"retourne rechercher all :\", response.data); //doc = 1message\n\n      while (response.data[i] != undefined) {\n        var mess = response.data[i].message;\n        console.log(\"mess\", mess);\n        console.log(\"rechercheU\", rechercheU);\n        var index = mess.indexOf(rechercheU);\n        console.log(\"index\", index);\n\n        if (index !== -1) {\n          alert(\"La sous-chaîne existe!\");\n          console.log(\"response.data[i]\", response.data); // posts.push(response.data[i])\n\n          sauv.push(response.data[i]);\n          setPosts(sauv.map(function (doc) {\n            return doc;\n          })); // setPosts(response.data.map((doc) => doc))\n\n          console.log(\"liste posts\", posts);\n        } else {\n          console.log(\"La sous-chaîne n'existe pas!\");\n        }\n\n        i = i + 1;\n      }\n\n      alert(\"fin while\");\n    }).catch(function (error) {\n      console.log(\"message pas bon\");\n      alert(error);\n      console.log(error);\n    });\n    alert(\"fin fonction\");\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"BarreRecherche\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setRechercheU(e.target.value);\n    },\n    id: \"inputRecherche\",\n    value: rechercheU,\n    placeholder: \"Ecrivez votre message\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: rechercher,\n    type: \"submit\",\n    id: \"boutonRecherche\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Rechercher\")), React.createElement(\"div\", {\n    id: \"messM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return React.createElement(Message, {\n      key: post._id,\n      pseudo: post.pseudo,\n      message: post.message,\n      date: post.date,\n      setClic: setClic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }))));\n}\n\nexport default Recherche;","map":{"version":3,"sources":["/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/src/Recherche.js"],"names":["React","useState","Message","axios","Recherche","PPpseudo","setClic","rechercheU","setRechercheU","posts","setPosts","sauv","rechercher","e","preventDefault","p","console","log","instance","create","baseURL","timeout","headers","i","get","then","response","data","undefined","mess","message","index","indexOf","alert","push","map","doc","catch","error","target","value","post","_id","pseudo","date"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport Message from './Message';\nimport './Recherche.css';\nimport axios from 'axios';\n\nfunction Recherche({PPpseudo, setClic}){\n    const[rechercheU, setRechercheU] = useState(\"\");\n    const[posts, setPosts] = useState([]);\n    let sauv = []\n    // let posts = []\n\n    const rechercher =(e) =>{\n        e.preventDefault();\n        let p = {PPpseudo}\n        console.log(\"PPp: \",PPpseudo)\n        const instance = axios.create({\n            baseURL: 'http://localhost:4000/',\n            timeout: 1000,\n            headers: {'X-Custom-Header': 'foobar'}\n        });\n        let i = 0\n        sauv = []\n        instance.get('api/message/All/'+p.PPpseudo)\n        .then(function (response){\n            //response.data liste de tous les messages\n            console.log(\"retourne rechercher all :\",response.data)\n            //doc = 1message\n            while(response.data[i] != undefined){\n                var mess = response.data[i].message\n                console.log(\"mess\",mess)\n                console.log(\"rechercheU\",rechercheU)\n                var index = mess.indexOf(rechercheU)\n                console.log(\"index\",index)\n                if(index !== -1){\n                    alert(\"La sous-chaîne existe!\");\n                    console.log(\"response.data[i]\",response.data)\n                    // posts.push(response.data[i])\n                    sauv.push(response.data[i])\n                    setPosts(sauv.map((doc)=>doc))\n                    // setPosts(response.data.map((doc) => doc))\n                    console.log(\"liste posts\",posts)\n                } else{\n                    console.log(\"La sous-chaîne n'existe pas!\");\n                }\n                i = i+1\n            }\n            alert(\"fin while\")\n        })\n        .catch(function (error){\n            console.log(\"message pas bon\")\n            alert(error)\n            console.log(error)\n        })\n        alert(\"fin fonction\")\n    }\n\n    return (\n        <div >\n            <form id=\"BarreRecherche\">\n                <div id=\"message\">\n                    <input onChange={(e) => setRechercheU(e.target.value)} id = \"inputRecherche\" value={rechercheU} placeholder=\"Ecrivez votre message\" type=\"text\"/>\n                    <button onClick={rechercher} type=\"submit\"  id = \"boutonRecherche\">Rechercher</button>\n                </div>\n\n                <div id=\"messM\">\n                    {posts.map((post) => (\n                        <Message key = {post._id} pseudo = {post.pseudo} message = {post.message} date = {post.date} setClic= {setClic}/>\n                        ))}\n                </div>\n            </form>\n        </div>\n        )\n    }\n\nexport default Recherche;"]},"metadata":{},"sourceType":"module"}