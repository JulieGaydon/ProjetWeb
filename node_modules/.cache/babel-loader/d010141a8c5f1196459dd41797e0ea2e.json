{"ast":null,"code":"import _classCallCheck from \"/home/julie/Documents/Julie/L3Info/Web/WebProjet/myapp/ProjetWeb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/julie/Documents/Julie/L3Info/Web/WebProjet/myapp/ProjetWeb/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/julie/Documents/Julie/L3Info/Web/WebProjet/myapp/ProjetWeb/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/julie/Documents/Julie/L3Info/Web/WebProjet/myapp/ProjetWeb/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/julie/Documents/Julie/L3Info/Web/WebProjet/myapp/ProjetWeb/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/julie/Documents/Julie/L3Info/Web/WebProjet/myapp/ProjetWeb/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/julie/Documents/Julie/L3Info/Web/WebProjet/myapp/ProjetWeb/src/PagePrincipale.js\";\nimport React, { Component } from 'react';\nimport Inscription from './Inscription';\nimport Connexion from './Connexion';\nimport \"./PagePrincipale.css\";\nimport MurDeTweets from './MurDeTweets';\n\nvar PagePrincipale =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PagePrincipale, _Component);\n\n  function PagePrincipale(props) {\n    var _this;\n\n    _classCallCheck(this, PagePrincipale);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PagePrincipale).call(this, props));\n    _this.state = {\n      pageCourante: \"PagePrincipale\",\n      cliqueC: false,\n      cliqueI: false,\n      connexion: false\n    };\n    _this.connection = _this.connection.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.inscription = _this.inscription.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.etatConnecte = _this.etatConnecte.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // fonction qu'on passera a l'enfant\n\n\n  _createClass(PagePrincipale, [{\n    key: \"etatConnecte\",\n    value: function etatConnecte() {\n      this.setState({\n        connexion: true\n      });\n    }\n  }, {\n    key: \"connection\",\n    value: function connection() {\n      this.setState({\n        pageCourante: \"Connexion\",\n        cliqueC: true,\n        cliqueI: false\n      });\n      return this.state;\n    }\n  }, {\n    key: \"inscription\",\n    value: function inscription() {\n      this.setState({\n        pageCourante: \"Inscription\",\n        cliqueI: true,\n        cliqueC: false\n      });\n      return this.state;\n    }\n  }, {\n    key: \"EventConnected\",\n    value: function EventConnected() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"papillonLogo.svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"buttonC\",\n        onClick: function onClick() {\n          return _this2.connection();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Connexion\"), React.createElement(\"button\", {\n        type: \"buttonI\",\n        onClick: function onClick() {\n          return _this2.inscription();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Inscription\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.connexion === true) {\n        return React.createElement(\"div\", {\n          className: \"MurDeTweets\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(MurDeTweets, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.cliqueC === false && this.state.cliqueI === false) {\n        return this.EventConnected();\n      } // On passe en parametre une fonction, qui sera appelee parles composants\n      // pour modifier l'etat de connexion, et permettra d'afficher le mur de tweet par la page principale \n\n\n      if (this.state.cliqueC === true) {\n        return React.createElement(\"div\", {\n          className: \"Connexion\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Connexion, {\n          etatConnecte: this.etatConnecte,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.cliqueI === true) {\n        return React.createElement(\"div\", {\n          className: \"Inscription\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Inscription, {\n          etatConnecte: this.etatConnecte,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return PagePrincipale;\n}(Component);\n\nexport default PagePrincipale;","map":{"version":3,"sources":["/home/julie/Documents/Julie/L3Info/Web/WebProjet/myapp/ProjetWeb/src/PagePrincipale.js"],"names":["React","Component","Inscription","Connexion","MurDeTweets","PagePrincipale","props","state","pageCourante","cliqueC","cliqueI","connexion","connection","bind","inscription","etatConnecte","setState","EventConnected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Inscription from './Inscription';\nimport Connexion from './Connexion';\nimport \"./PagePrincipale.css\";\nimport MurDeTweets from './MurDeTweets';\n\nclass PagePrincipale extends Component{\n    constructor(props){\n        super(props);\n        this.state = {pageCourante : \"PagePrincipale\",cliqueC : false, cliqueI : false, connexion : false};\n        this.connection = this.connection.bind(this);\n        this.inscription = this.inscription.bind(this);\n        this.etatConnecte = this.etatConnecte.bind(this);\n\n    }\n\n    // fonction qu'on passera a l'enfant\n    etatConnecte(){\n        this.setState({connexion : true});\n    }\n\n    connection(){\n        this.setState({pageCourante : \"Connexion\",cliqueC : true,cliqueI : false});\n        return this.state;\n    }\n\n    inscription(){\n        this.setState({pageCourante : \"Inscription\",cliqueI : true,cliqueC : false}); \n        return this.state;\n    }\n\n    EventConnected() {      \n        return <>   \n            <fieldset>\n                <img src=\"papillonLogo.svg\"/>\n                <b>\n                    <button type=\"buttonC\" onClick={()=>this.connection()}>Connexion</button>     \n                    <button type=\"buttonI\" onClick={()=>this.inscription()}>Inscription</button>\n                </b>\n            </fieldset>\n            </>; \n    }\n\n    render(){\n        if(this.state.connexion === true){\n            return (<div className = \"MurDeTweets\">\n                {<MurDeTweets/>}\n            </div>);\n        }\n        if(this.state.cliqueC === false && this.state.cliqueI === false){\n            return this.EventConnected()\n        }\n        // On passe en parametre une fonction, qui sera appelee parles composants\n        // pour modifier l'etat de connexion, et permettra d'afficher le mur de tweet par la page principale \n        if(this.state.cliqueC === true){\n            return (<div className = \"Connexion\">\n                {<Connexion etatConnecte = {this.etatConnecte}/>}\n            </div>);\n        }\n        if(this.state.cliqueI === true){\n            return (<div className = \"Inscription\">\n                {<Inscription etatConnecte = {this.etatConnecte}/>}\n            </div>);\n        }\n    }\n    \n}\n\nexport default PagePrincipale;"]},"metadata":{},"sourceType":"module"}