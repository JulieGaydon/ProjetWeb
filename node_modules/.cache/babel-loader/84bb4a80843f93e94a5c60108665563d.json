{"ast":null,"code":"import _slicedToArray from \"/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/src/FormAddMessage.js\";\nimport React, { useState } from 'react';\nimport ListeMessage from './ListeMessage';\nimport MurDeTweetsF from './MurDeTweets';\nimport './FormAddMessage.css';\nimport axios from 'axios';\n\nfunction FormAddMessage(_ref) {\n  var _this = this;\n\n  var passerPseudo = _ref.passerPseudo;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      addMessage = _useState2[1];\n\n  var publier = function publier() {\n    var instance = axios.create({\n      baseURL: 'http://localhost:4000/',\n      timeout: 5000,\n      headers: {\n        'X-Custom-Header': 'foobar'\n      }\n    });\n    var p = {\n      passerPseudo: passerPseudo\n    };\n    console.log(\"form: \", message);\n    instance.put('api/message', {\n      Pseudo: p.passerPseudo,\n      message: message\n    }).then(function (response) {\n      console.log(\"resultat\", response);\n      alert(\"ca marche\", response);\n    }).catch(function (error) {\n      console.log(error);\n      alert(\"error\", error);\n    });\n  };\n\n  return (// <form className = \"FormAddMessage\" name = \"FormAddMessage\">\n    //     <div id=\"message\">\n    //         <input onChange={m => addMessage(m.target.value)} id = \"inputM\" value = {message} placeholder=\"Ecrire votre message\" type = \"text\"></input>\n    //         <button className = \"button\" id = \"publierM\" onClick={publier}>Publier</button>\n    //     </div>\n    // </form>\n    React.createElement(\"form\", {\n      name: \"inscriptionF\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"PPtitre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"ButterFly\"), React.createElement(\"fieldset\", {\n      id: \"principal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      id: \"annuler\",\n      onClick: function onClick() {\n        return _this.annulation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"h2\", {\n      id: \"titreI\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Inscription\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputI\",\n      placeholder: \"Nom\",\n      name: \"nom\",\n      value: this.state.nom,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"inputI\",\n      placeholder: \"Pr\\xE9nom\",\n      name: \"prenom\",\n      value: this.state.prenom,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"inputI\",\n      type: \"email\",\n      placeholder: \"Adresse Mail\",\n      name: \"mail\",\n      value: this.state.mail,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"inputI\",\n      type: \"text\",\n      placeholder: \"Pseudo\",\n      name: \"pseudo\",\n      value: this.state.pseudo,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"inputI\",\n      type: \"password\",\n      placeholder: \"Mot de Passe \",\n      name: \"mdp\",\n      value: this.state.mdp,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"inputI\",\n      type: \"password\",\n      placeholder: \"Confirmer Mot de Passe\",\n      name: \"confirmMDP\",\n      value: this.state.confirmMDP,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"inscription\",\n      onClick: function onClick() {\n        return _this.handleSubmit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Inscription\")))\n  );\n}\n\nexport default FormAddMessage;","map":{"version":3,"sources":["/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/src/FormAddMessage.js"],"names":["React","useState","ListeMessage","MurDeTweetsF","axios","FormAddMessage","passerPseudo","message","addMessage","publier","instance","create","baseURL","timeout","headers","p","console","log","put","Pseudo","then","response","alert","catch","error","handleSubmit","annulation","state","nom","handleChange","prenom","mail","pseudo","mdp","confirmMDP"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport ListeMessage from './ListeMessage';\nimport MurDeTweetsF from './MurDeTweets';\nimport './FormAddMessage.css';\nimport axios from 'axios';\n\nfunction FormAddMessage({passerPseudo}){\n    const[message, addMessage] = useState(\"\");\n\n    const publier =() =>{\n        const instance = axios.create({\n        baseURL: 'http://localhost:4000/',\n        timeout: 5000,\n        headers: {'X-Custom-Header': 'foobar'}\n        });\n        let p = {passerPseudo}\n        console.log(\"form: \" ,message)\n        instance.put('api/message',{Pseudo : p.passerPseudo, message : message})\n        .then(function (response){\n            console.log(\"resultat\",response)\n            alert(\"ca marche\",response)\n        })\n        .catch(function (error){\n            console.log(error)\n            alert(\"error\",error)\n        })\n    }\n\n    return(\n        // <form className = \"FormAddMessage\" name = \"FormAddMessage\">\n        //     <div id=\"message\">\n        //         <input onChange={m => addMessage(m.target.value)} id = \"inputM\" value = {message} placeholder=\"Ecrire votre message\" type = \"text\"></input>\n        //         <button className = \"button\" id = \"publierM\" onClick={publier}>Publier</button>\n        //     </div>\n        // </form>\n        <form name = \"inscriptionF\" onSubmit={this.handleSubmit}>\n            <h1 id = \"PPtitre\">ButterFly</h1>\n        <fieldset id = \"principal\">\n            <button type=\"button\" id = \"annuler\" onClick={()=>this.annulation()}>X</button>\n            <h2 id=\"titreI\" >Inscription</h2>\n            <input type = \"text\" id = \"inputI\" placeholder='Nom' name = \"nom\" value= {this.state.nom} onChange= {this.handleChange}></input><br/>\n            <input type = \"text\" id = \"inputI\" placeholder= \"Prénom\" name = \"prenom\" value= {this.state.prenom} onChange= {this.handleChange}></input><br/>\n            <input id = \"inputI\" type = \"email\" placeholder=\"Adresse Mail\" name = \"mail\" value= {this.state.mail} onChange= {this.handleChange}></input><br/>\n            <input id = \"inputI\" type = \"text\" placeholder= \"Pseudo\" name = \"pseudo\" value= {this.state.pseudo} onChange= {this.handleChange} ></input><br/>\n            <input id = \"inputI\" type = \"password\" placeholder=\"Mot de Passe \" name = \"mdp\" value= {this.state.mdp} onChange= {this.handleChange}></input><br/>\n            <input id = \"inputI\" type = \"password\" placeholder=\"Confirmer Mot de Passe\" name = \"confirmMDP\" value= {this.state.confirmMDP} onChange= {this.handleChange} ></input><br/>\n            <button type=\"button\" id = \"inscription\" onClick={()=>this.handleSubmit()}>Inscription</button>\n        </fieldset>\n        </form>\n    )\n    }\n\n\nexport default FormAddMessage;"]},"metadata":{},"sourceType":"module"}