{"ast":null,"code":"import _slicedToArray from \"/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/src/Recherche.js\";\nimport React, { useState } from 'react';\nimport ListeMessage from './ListeMessage';\nimport MurDeTweetsF from './MurDeTweets';\nimport Message from './Message';\nimport './recherche.css';\nimport axios from 'axios';\n\nfunction Recherche(_ref) {\n  var PPpseudo = _ref.PPpseudo,\n      setClic = _ref.setClic;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      rechercheU = _useState2[0],\n      setRechercheU = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      posts = _useState4[0],\n      setPosts = _useState4[1];\n\n  var rechercher = function rechercher() {\n    var p = {\n      PPpseudo: PPpseudo\n    };\n    console.log(\"PPp: \", PPpseudo);\n    var instance = axios.create({\n      baseURL: 'http://localhost:4000/',\n      timeout: 1000,\n      headers: {\n        'X-Custom-Header': 'foobar'\n      }\n    });\n    var i = 0;\n    instance.get('api/message/All/' + p.PPpseudo).then(function (response) {\n      //response.data liste de tous les messages\n      console.log(\"retourne rechercher all :\", response.data); //doc = 1message\n\n      while (response.data[i] != undefined) {\n        var mess = response.data[i].message;\n        console.log(\"mess\", mess);\n        console.log(\"rechercheU\", rechercheU);\n        var index = mess.indexOf(rechercheU);\n        console.log(\"index\", index);\n\n        if (index !== -1) {\n          alert(\"La sous-chaîne existe!\");\n          setPosts(response.data.map(function (doc) {\n            return doc;\n          }));\n          alert(\"mess Paris\");\n        } else {\n          console.log(\"La sous-chaîne n'existe pas!\");\n        }\n\n        i = i + 1;\n      }\n\n      alert(\"fin while\");\n    }).catch(function (error) {\n      console.log(\"message pas bon\");\n      alert(error);\n      console.log(error);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    id: \"MurDeTweets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    id: \"BarreRecherche\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"recherIn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"inputM\",\n    onChange: function onChange(m) {\n      return setRechercheU(m.target.value);\n    },\n    value: rechercheU,\n    placeholder: \"chercher des abonn\\xE9s\",\n    name: \"recherche\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"button\",\n    id: \"rech\",\n    onClick: rechercher,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Recherche\"))), React.createElement(\"div\", {\n    id: \"messM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return React.createElement(Message, {\n      key: post._id,\n      pseudo: post.pseudo,\n      message: post.message,\n      date: post.date,\n      setClic: setClic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  })));\n  console.log(\"stop\");\n}\n\nexport default Recherche;","map":{"version":3,"sources":["/home/julie/Documents/Julie/L3Info/Web/ProjetWeb/src/Recherche.js"],"names":["React","useState","ListeMessage","MurDeTweetsF","Message","axios","Recherche","PPpseudo","setClic","rechercheU","setRechercheU","posts","setPosts","rechercher","p","console","log","instance","create","baseURL","timeout","headers","i","get","then","response","data","undefined","mess","message","index","indexOf","alert","map","doc","catch","error","m","target","value","post","_id","pseudo","date"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport ListeMessage from './ListeMessage';\nimport MurDeTweetsF from './MurDeTweets';\nimport Message from './Message';\nimport './recherche.css';\nimport axios from 'axios';\n\nfunction Recherche({PPpseudo, setClic}){\n    const[rechercheU, setRechercheU] = useState(\"\");\n    const[posts, setPosts] = useState([]);\n\n    const rechercher =() =>{\n        let p = {PPpseudo}\n        console.log(\"PPp: \",PPpseudo)\n        const instance = axios.create({\n            baseURL: 'http://localhost:4000/',\n            timeout: 1000,\n            headers: {'X-Custom-Header': 'foobar'}\n        });\n        let i = 0\n        instance.get('api/message/All/'+p.PPpseudo)\n        .then(function (response){\n            //response.data liste de tous les messages\n            console.log(\"retourne rechercher all :\",response.data)\n            //doc = 1message\n            while(response.data[i] != undefined){\n                var mess = response.data[i].message\n                console.log(\"mess\",mess)\n                console.log(\"rechercheU\",rechercheU)\n                var index = mess.indexOf(rechercheU)\n                console.log(\"index\",index)\n                if(index !== -1){\n                    alert(\"La sous-chaîne existe!\");\n                    setPosts(response.data.map((doc) => doc))\n                    alert(\"mess Paris\")\n                } else{\n                    console.log(\"La sous-chaîne n'existe pas!\");\n                }\n                i = i+1\n            }\n            alert(\"fin while\")\n        })\n        .catch(function (error){\n            console.log(\"message pas bon\")\n            alert(error)\n            console.log(error)\n        })\n    }\n\n    return (\n        <div id = \"MurDeTweets\">\n            <form id=\"BarreRecherche\">\n                <div id=\"message\">\n                    <label id = \"recherIn\"></label><input type = \"text\" id = \"inputM\" onChange={m => setRechercheU(m.target.value)} value = {rechercheU} placeholder='chercher des abonnés' name = \"recherche\" ></input>\n                    <button className = \"button\" id = \"rech\"  onClick={rechercher}>Recherche</button>\n                </div>\n            </form>\n\n            <div id=\"messM\">\n            {/* <ListeMessage passerPseudo = {PPpseudo} tousMessages = {true}/> */}\n            {posts.map((post) => (\n                <Message key = {post._id} pseudo = {post.pseudo} message = {post.message} date = {post.date} setClic= {setClic}/>\n            ))}\n            </div>\n        </div>\n        )\n        console.log(\"stop\")\n    }\n\nexport default Recherche;"]},"metadata":{},"sourceType":"module"}